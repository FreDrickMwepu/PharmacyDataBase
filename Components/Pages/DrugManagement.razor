@page "/drugs"
@using PharmacyDataBase.Model
@using PharmacyDataBase.Services
@inject DrugServices drugService
@attribute [StreamRendering]

<h1>Drugs</h1>

<form>
    <div class="row">
        <div class="col-6">
            <label class="form-label">Trade Name</label>
            <input type="text" class="form-control" @bind="newDrug.TradeName">
        </div>
        <div class="col-6">
            <label class="form-label">Formula</label>
            <input type="text" class="form-control" @bind="newDrug.Formula">
        </div>
        <div class="col-6">
            <label class="form-label">Company Name</label>
            <input type="text" class="form-control" @bind="newDrug.CompanyName">
        </div>
    </div>
    <button type="button" class="btn btn-primary btn-block col-12 my-2" @onclick="AddDrug">Add Drug</button>
</form>

<div>
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Trade Name</th>
            <th scope="col">Formula</th>
            <th scope="col">Company Name</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var drug in drugs)
        {
            <tr>
                <td>@drug.TradeName</td>
                <td>@drug.Formula</td>
                <td>@drug.CompanyName</td>
            </tr>
        }
        </tbody>
    </table>
</div>

@code {
    public List<Drug> drugs = new List<Drug>();
    public Drug newDrug = new Drug();

    protected override async Task OnInitializedAsync()
    {
        drugs = await drugService.GetDrugs();
    }

    public async Task AddDrug()
    {
        await drugService.PostDrug(newDrug);
        drugs = await drugService.GetDrugs();
        newDrug = new Drug();
        StateHasChanged();
    }
}