@page "/companies"
@using PharmacyDataBase.Model
@using PharmacyDataBase.Services
@rendermode InteractiveServer
@inject CompanyServices companyService
@attribute [StreamRendering]

<h1>Pharmaceutical Companies</h1>

<EditForm Model="@newCompany" OnValidSubmit="@AddCompany">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-6">
            <label class="form-label">Company Name</label>
            <InputText class="form-control" @bind-Value="newCompany.Name" />
        </div>
        <div class="col-6">
            <label class="form-label">Phone Number</label>
            <InputText class="form-control" @bind-Value="newCompany.PhoneNumber" />
        </div>
    </div>
    <div class="d-grid gap-2 col-6 mx-auto py-4">
        <button type="submit" class="btn btn-primary">Add Company</button>
    </div>
    
</EditForm>

<div>
    <table class="table table-striped">
        <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var company in companies)
        {
            <tr>
                <td>@company.Name</td>
                <td>@company.PhoneNumber</td>
                <td>
                    <button class="btn btn-warning" >
                        <i class="bi bi-pencil-square"></i> Edit
                    </button>
                    <button class="btn btn-danger" >
                        <i class="bi bi-pencil-square"></i> Delete
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@code {
    public List<PharmaceuticalCompany> companies = new List<PharmaceuticalCompany>();
    public PharmaceuticalCompany newCompany = new PharmaceuticalCompany();

    protected override async Task OnInitializedAsync()
    {
        companies = await companyService.Get();
    }

    public async Task AddCompany()
    {
        await companyService.Post(newCompany);
        companies = await companyService.Get();
        newCompany = new PharmaceuticalCompany();
        StateHasChanged();
    }
}